pipeline {
    agent any

    tools {
        nodejs 'NodeJS_24'
        jdk 'JDK_17'
    }

    parameters {
        choice(
            name: 'TEST_SUITE',
            choices: ['all', 'regression', 'smoke'],
            description: 'Choose which test suite to run'
        )
        string(
            name: 'BRANCH_NAME',
            defaultValue: 'main',
            description: 'Git branch to build'
        )
        string(
            name: 'MY_USERNAME',
            defaultValue: '',
            description: 'username for tests'
        )
        string(
            name: 'MY_PASSWORD',
            defaultValue: '',
            description: 'password for tests'
        )
    }

    environment {
        MY_USERNAME = "${params.MY_USERNAME}"
        MY_PASSWORD = "${params.MY_PASSWORD}"
        ALLURE_RESULTS = "${WORKSPACE}\\allure-results"
        ALLURE_REPORT = "${WORKSPACE}\\allure-report"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        timestamps()
    }

    stages {

        stage('Checkout') {
            steps {
                echo "Checking out code from SCM..."
                checkout scm
            }
        }

        stage('Clean Workspace') {
            steps {
                echo "Cleaning old test results and reports..."
                bat 'rd /s /q test-results playwright-report allure-results allure-report || exit 0'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "Installing npm dependencies..."
                bat 'npm ci'
            }
        }

        stage('Install Playwright Browsers') {
            steps {
                echo "Installing Playwright browsers..."
                bat 'npx playwright install'
            }
        }

        stage('Run Tests') {
            steps {
                echo "Running ${params.TEST_SUITE} tests..."
                script {
                    if (params.TEST_SUITE == 'all') {
                        bat "npx playwright test"
                    } else {
                        bat "npx playwright test --grep @${params.TEST_SUITE}"
                    }
                }
            }
            post {
                always {
                    echo "Publishing JUnit XML results..."
                    junit '**/test-results/*.xml'
                }
            }
        }

        stage('Generate Allure Report') {
            steps {
                echo "Generating Allure report..."
                bat "npx allure generate %ALLURE_RESULTS% --clean -o %ALLURE_REPORT% || exit 0"
            }
        }

        stage('Archive Allure Report') {
            steps {
                echo "Archiving Allure report..."
                archiveArtifacts artifacts: 'allure-report/**', fingerprint: true
            }
        }

        stage('Publish Allure Report in Jenkins') {
            steps {
                echo "Publishing Allure report in Jenkins..."
                allure([
                    includeProperties: false,
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }
    }

    post {
        success {
            echo "Build Successful! Tests completed."
        }
        failure {
            echo "Build Failed! Check reports for details."
        }
        always {
            echo "Cleaning temporary test artifacts..."
            bat 'rd /s /q temp || exit 0'
        }
    }
}
